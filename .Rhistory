sourde(pathtofile("plot2.R"),local=TRUE)
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("mylabels.R"),local=TRUE)
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color * cut,data=diamonds,strip=FALSE, pch=20, xlab=myxlab, ylab=myylab,main=mymain)
xyplot(price~carat | color * cut,data=diamonds, pch=20, xlab=myxlab, ylab=myylab,main=mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pa(0)
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun(rgb)
?rgb
colorRampPalette(c("blue","green"),alpha=.5)
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rg(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols <- brewer.pa(3,"BuGn")
cols <- brewer.pal(3,"BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(mpg$displ,mpg$hwy,mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv,geom=c("point","smooth"))
qplot(hwy,data=mpg,col=drv)
qplot(y=hwy,data=mpg,col=drv)
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",col=manufacturer)
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
x <- rnorm(1000,mean=3,sd=.5)
y <- x + cos(x)
plot(x,y)
y <- x - cos(x)
plot(x,y)
y <- x * cos(x)
plot(x,y)
y <- x * cos(x)^2
plot(x,y)
y <- 3x^3 + 4x^2  3x + 5
y <- 3*x^3 + 4*x^2  3*x + 5
y <- 3*x^3 + 4*x^2+  3*x + 5
plot(x,y)
plot(x,y,col="blue")
plot(x,y,col="blue",alpha=.5)
plot(x,y,col="blue")
source('~/.active-rstudio-document')
dataMatrix <- data.matrix(40,10)
source('~/.active-rstudio-document')
data <- read.csv("new1.txt")
data <- read.csv("new 1.txt")
rm(list=ls())
data <- read.csv("new 1.txt")
colnames(data)
plot(data$HLAN,data$WBC)
str(data)
plot(data$HLAM,data$WBC)
abline(method="lm")
abline(lm(data$HLAM~data$WBC))
abline(lm(data$HLAM~data$WBC,data=data))
abline(lm(HLAM~WBC,data=data))
rm(list=ls())
dt <- read.csv("new 1.txt")
plot(dt$HLAM,dt$WBC)
abline(lm(HLAM~WBC,data=dt))
abline(lm(WBC ~ HLAM,data=dt))
library(ggplot2)
qplot(WBC,HLAM,data=dt,geom="smooth",col="blue")
qplot(WBC,HLAM,data=dt,geom="smooth",color="blue")
qplot(WBC,HLAM,data=dt,geom="smooth")
qplot(HLAM,WBC, data=dt,geom="smooth")
qplot(WBC,HLAM,data=dt,geom="smooth")
plot(dt$HLAM,dt$WBC)
SmoothSpline = smooth.spline(x,y,spar=0.35)
SmoothSpline = smooth.spline(dt$HLAM,dt$WBC,spar=0.35)
lines(SmoothSpline)
scatter.smooth(dt$HLAM,dt$WBC)
plot(dt$HLAM,dt$WBC)
lines(SmoothSpline)
rm(list=ls())
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
str(hc)
class(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
5
9
12
abline(h=0.5,col="green")
dist(dFsm)
hc
heatmap(datamatrix,col=cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=8,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% matv %*% t(matv)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
sdv2$d
svd2$d
svd2$[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]) * (svd1$d[1]) %*% t(svd1$v)
info()
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
myImage(svd1$u[,1:20] %*% diag(svd1$d[1:20]) %*% t(svd1$v[,1:20]))
q(0)
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.date(as.character(dates),"%Y%m%d")
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,pm0$State.Code==36 && pm0$county.site %in% both)
cnt0 <- subset(pm0,State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code==36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sum <- subset(cnt0,County.Code == 63 & Site.ID == 2008)
pm0sub <- subset(cnt0,County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1,County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.DAte(as.character(pm0sub$Date),"%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub,na.rm=TRUE))
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
RNG
rng
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5))
)
with(mrg,points(rep(2,52),mrg[,3])
)
segments(rep(1,52),mrg[,2],rep(2,52)mrg[,3])
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean,y,]
mrg[mrg$mean.x < mrg$mean.y,]
getwd()
data <- read.csv(unz("activity.zip","activity.csv"))
str(data)
View(d1)
hist(activity$steps)
activity <- read.csv(unz("activity.zip","activity.csv"))
hist(activity$steps)
hist(activity$steps~activity$date)
?hist
dailysteps <- aggregate(activity$steps,by=list(Day=activity$date),FUN=sum)
hist(dailysteps)
dailysteps
hist(dailysteps$x)
mean(dailysteps$x)
mean(dailysteps$x,rm.NA = TRUE)
?mean
mean(dailysteps$x,na.rm = TRUE)
median(dailysteps$x,na.rm = TRUE)
c <- median(dailysteps$x,na.rm = TRUE)
c
d<-mean(dailysteps$x,na.rm = TRUE)
d
meansteps
sprintf("%f",d)
sprintf("%0f",d)
sprintf("%.0f",d)
activity[1:20,]
dailysteps <- aggregate(activity$steps,by=list(Day=activity$date,Interval=activity$interval),FUN=avg)
dailysteps <- aggregate(activity$steps,by=list(Day=activity$date,Interval=activity$interval),FUN=average)
dailysteps <- aggregate(activity$steps,by=list(Day=activity$date,Interval=activity$interval),FUN=mean)
dailysteps
hist(dailysteps$x)
plot(dailysteps$x,dailysteps$Interval)
str(activity)
range(activity$interval)
plot(activity$steps,activity$interval)
dailysteps <- aggregate(activity$steps,by=list(Interal=activity$interval,Day=activity$date),FUN=mean)
str(dailysteps)
str(activity)
dailysteps <- aggregate(activity$steps,by=list(Interal=activity$interval),FUN=mean)
str(dailysteps)
plot(dailysteps$x,dailysteps$Interal)
dailysteps <- aggregate(activity$steps,by=list(Interal=activity$interval),FUN=mean,na.rm=TRUE)
plot(dailysteps$x,dailysteps$Interal)
plot(dailysteps$x,dailysteps$Interal,type="l")
plot(dailysteps$Interal,dailysteps$x,type="l")
count(is.na(activity$steps))
reccount(is.na(activity$steps))
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
?sprintf
avgintervals <- aggregate(activity$steps,by=list(activity$interval),FUN=mean)
str(avgintervals)
avgintervals <- aggregate(activity$steps,by=list(activity$interval),FUN=mean,na.rm=TRUE)
str(avgintervals)
newactivity <- merge(x=activity,y=avgintervals,by=
"interval",all=TRUE)
newactivity <- merge(x=activity,y=avgintervals,by="interval",all=TRUE)
str(avgintervals)
avgintervals <- aggregate(activity$steps,by=list(interval=activity$interval),FUN=mean,na.rm=TRUE)
newactivity <- merge(x=activity,y=avgintervals,by="interval",all=TRUE)
newactivity
str(avgintervals)
avgintervals[320/5,]
avgintervals[interval=320,]
avgintervals[avgintervals$interval=320,]
avgintervals[interval=320,]
avgintervals[interval=0,]
avgintervals[avgintervals[interval=0],]
avgintervals[interval==320,]
avgintervals[avgintervals$interval==320,]
newactivity <- transform(activity,step= iflese(is.na(step),avgintervals[avgintervals$interval==activity$interval]))
newactivity <- transform(activity,step= ifelse(is.na(step),avgintervals[avgintervals$interval==activity$interval]))
for(act in activity) {}
newactivity <- merge(x=activity,y=avgintervals,by="interval",all=TRUE)
activity1<- activity
source('~/.active-rstudio-document')
?apply
?tapply
?sapply
?apply
source('~/.active-rstudio-document')
str(activity)
f <- function(step,interval) {
if(is.na(step))
step <- avgintervals[avgintervals$interval==interval,step]
}
apply(activity1,1,f,interval=interval)
f <- function(step,interval) {
if(is.na(step))
step <- avgintervals[avgintervals$interval==interval,step]
}
apply(activity1,1,f,interval=$interval)
f <- function(step,interval) {
if(is.na(step))
step <- avgintervals[avgintervals$interval==interval,step]
}
apply(activity1,1,f,interval=activity1$interval)
newactivity <- merge(x=activity,y=avgintervals,by="interval",all=TRUE)
stepna <- newactivity[is.na(step)]
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],step]
}
}
str(activity1)
str(activity)
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],steps]
}
}
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],1]
}
}
str(activity1)
avgintervals <- aggregate(activity$steps,by=list(activity$interval),FUN=mean,na.rm=TRUE)
newactivity <- activity
for(i in 1:nrow(newactivity)) {
if(is.na(newactivity$steps[i]) == TRUE) {
newactivity$steps[i] = avgintervals[avgintervals$interval==newactivity$interval[i],1]
}
}
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],1]
}
}
avgintervals <- aggregate(activity$steps,by=list(activity$interval),FUN=mean,na.rm=TRUE)
activity1 <- activity
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],1]
}
}
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],1]
}
}
activity1<- activity
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],1]
}
}
activity <- read.csv(unz("activity.zip","activity.csv"))
activityt1 <- activity
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],1]
}
}
newactivity <- merge(x=activity,y=avgintervals,by="interval",all=TRUE)
str(activity1)
str(avgintervals)
avgintervals <- aggregate(activity$steps,by=list(interval=activity$interval),FUN=mean,na.rm=TRUE)
activity1 <- activity
for(i in 1:nrow(activity1)) {
if(is.na(activity1$steps[i]) == TRUE) {
activity1$steps[i] = avgintervals[avgintervals$interval==activity1$interval[i],1]
}
}
avgintervals[1:10,]
newactivity[activity[is.na()]]
newactivity[activity[is.na($step)]]
newactivity[activity[is.na(step)]]
newactivity[activity[is.na(activity$step)]]
newactivity[activity[is.na(activity$step)],]
newactivity[activity[is.na(activity$step),1],]
activity[1:10,]
newactivity[1:10,]
avgintervals <- aggregate(activity$steps,by=list(interval=activity$interval),FUN=mean,na.rm=TRUE)
newactivity <- activity
for(i in 1:nrow(newactivity)) {
if(is.na(newactivity$steps[i]) == TRUE) {
newactivity$steps[i] = avgintervals[avgintervals$interval==newactivity$interval[i],1]
}
}
newactivity[1:10,]
avgintervals[1:10,]
newactivity$period <- ifelse(weekdays(newactivity$date),"Weekday","Weekend")
?weekdays
newactivity$period <- ifelse(weekdays(newactivity$date)<6,"Weekday","Weekend")
weekdays(newactivity$date)
str(newactivity)
newactivity$period <- ifelse(weekdays(as.date(newactivity$date))<6,"Weekday","Weekend")
newactivity$period <- ifelse(weekdays(as.Date(newactivity$date))<6,"Weekday","Weekend")
newactivity[1:20,]
days<-weekdays(as.Date(newactivity$date))
days[1:10]
days<-weekdays(as.Date(newactivity$date),abbreviate = TRUE) %in% c("Sat","Sun")
days[1:10]
newactivity$period <- ifelse(weekdays(as.Date(newactivity$date),abbreviate=TRUE) %in% c("Sat","Sun"),"Weekend","Weekday")
newactivity[1:20,]
library(lattice)
par(mfrow=2)
par(mfrow=c(2,1))
plot(newactivity$steps,newactivity$period)
xyplot(steps ~ interval | period)
xyplot(newactivity$steps ~ newactivity$interval | newactivity$period)
?xyplot
xyplot(newactivity,steps ~ interval | period)
xyplot(steps~interval|factor(date),
type='l',layout=c(1,2),
xlab='Interval',ylab='Number of Steps')
xyplot(steps~interval|period,
type='l',layout=c(1,2),
xlab='Interval',ylab='Number of Steps')
str(newactivity)
xyplot(newactivity,steps~interval|period,
type='l',layout=c(1,2),
xlab='Interval',ylab='Number of Steps')
xyplot(steps~interval|period,
type='l',layout=c(1,2),
xlab='Interval',ylab='Number of Steps',data=newactivity)
xyplot(steps~interval|period,
type='l',layout=c(1,2),
xlab='Interval',ylab='Number of Steps',data=newactivity)
library(lattice)
xyplot(steps~interval|period,
type='l',layout=c(1,2),
xlab='Interval',ylab='Number of Steps',data=newactivity)
setwd("github/repdata_peerassesment1")
getwd()
setwd("GitHub\RepData_PeerAssessment1")
setwd("GitHub/RepData_PeerAssessment1")
activity <- read.csv(unz("activity.zip","activity.csv"))
averagesteps <- aggregate(activity$steps,by=list(Interval=activity$interval),FUN=mean)
str(averagesteps)
averagesteps <- aggregate(activity$steps,by=list(Interval=activity$interval),FUN=mean,rm.na=TRUE)
str(averagesteps)
averagesteps <- aggregate(activity$steps,by=list(Interval=activity$interval),FUN=mean,na.rm=TRUE)
str(averagesteps)
range(averagesteps)
max(averagesteps)
max(averagesteps$x)
avgsteps <- aggregate(activity$steps,by=list(Interval=activity$interval),FUN=mean,na.rm=TRUE)
maxInterval <- avgsteps$interval[which.max(avgsteps$x)]
maxInterval
str(avgsteps)
which.max(avgsteps$x)
maxInterval <- avgsteps$Interval[which.max(avgsteps$x)]
maxInterval
